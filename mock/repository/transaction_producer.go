// Code generated by MockGen. DO NOT EDIT.
// Source: stockbit-challenge/repository (interfaces: ITransactionProducer)

// Package repository_mock is a generated GoMock package.
package repository_mock

import (
	context "context"
	reflect "reflect"
	model "stockbit-challenge/model"

	gomock "github.com/golang/mock/gomock"
)

// MockITransactionProducer is a mock of ITransactionProducer interface.
type MockITransactionProducer struct {
	ctrl     *gomock.Controller
	recorder *MockITransactionProducerMockRecorder
}

// MockITransactionProducerMockRecorder is the mock recorder for MockITransactionProducer.
type MockITransactionProducerMockRecorder struct {
	mock *MockITransactionProducer
}

// NewMockITransactionProducer creates a new mock instance.
func NewMockITransactionProducer(ctrl *gomock.Controller) *MockITransactionProducer {
	mock := &MockITransactionProducer{ctrl: ctrl}
	mock.recorder = &MockITransactionProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITransactionProducer) EXPECT() *MockITransactionProducerMockRecorder {
	return m.recorder
}

// ProduceTrx mocks base method.
func (m *MockITransactionProducer) ProduceTrx(arg0 context.Context, arg1 model.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProduceTrx", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProduceTrx indicates an expected call of ProduceTrx.
func (mr *MockITransactionProducerMockRecorder) ProduceTrx(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProduceTrx", reflect.TypeOf((*MockITransactionProducer)(nil).ProduceTrx), arg0, arg1)
}

// ProduceTrxDLQ mocks base method.
func (m *MockITransactionProducer) ProduceTrxDLQ(arg0 context.Context, arg1 model.Transaction, arg2 error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProduceTrxDLQ", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProduceTrxDLQ indicates an expected call of ProduceTrxDLQ.
func (mr *MockITransactionProducerMockRecorder) ProduceTrxDLQ(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProduceTrxDLQ", reflect.TypeOf((*MockITransactionProducer)(nil).ProduceTrxDLQ), arg0, arg1, arg2)
}
