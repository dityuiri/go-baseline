// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dityuiri/go-baseline/repository (interfaces: IHealthCheckRepository)

// Package repository_mock is a generated GoMock package.
package repository_mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIHealthCheckRepository is a mock of IHealthCheckRepository interface.
type MockIHealthCheckRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIHealthCheckRepositoryMockRecorder
}

// MockIHealthCheckRepositoryMockRecorder is the mock recorder for MockIHealthCheckRepository.
type MockIHealthCheckRepositoryMockRecorder struct {
	mock *MockIHealthCheckRepository
}

// NewMockIHealthCheckRepository creates a new mock instance.
func NewMockIHealthCheckRepository(ctrl *gomock.Controller) *MockIHealthCheckRepository {
	mock := &MockIHealthCheckRepository{ctrl: ctrl}
	mock.recorder = &MockIHealthCheckRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHealthCheckRepository) EXPECT() *MockIHealthCheckRepositoryMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *MockIHealthCheckRepository) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockIHealthCheckRepositoryMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockIHealthCheckRepository)(nil).Ping))
}
