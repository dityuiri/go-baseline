// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dityuiri/go-baseline/repository (interfaces: IPlaceholderCache)

// Package repository_mock is a generated GoMock package.
package repository_mock

import (
	context "context"
	dto "github.com/dityuiri/go-baseline/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPlaceholderCache is a mock of IPlaceholderCache interface.
type MockIPlaceholderCache struct {
	ctrl     *gomock.Controller
	recorder *MockIPlaceholderCacheMockRecorder
}

// MockIPlaceholderCacheMockRecorder is the mock recorder for MockIPlaceholderCache.
type MockIPlaceholderCacheMockRecorder struct {
	mock *MockIPlaceholderCache
}

// NewMockIPlaceholderCache creates a new mock instance.
func NewMockIPlaceholderCache(ctrl *gomock.Controller) *MockIPlaceholderCache {
	mock := &MockIPlaceholderCache{ctrl: ctrl}
	mock.recorder = &MockIPlaceholderCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPlaceholderCache) EXPECT() *MockIPlaceholderCacheMockRecorder {
	return m.recorder
}

// GetPlaceholderInfo mocks base method.
func (m *MockIPlaceholderCache) GetPlaceholderInfo(arg0 context.Context, arg1 string) (*dto.PlaceholderDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPlaceholderInfo", arg0, arg1)
	ret0, _ := ret[0].(*dto.PlaceholderDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPlaceholderInfo indicates an expected call of GetPlaceholderInfo.
func (mr *MockIPlaceholderCacheMockRecorder) GetPlaceholderInfo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlaceholderInfo", reflect.TypeOf((*MockIPlaceholderCache)(nil).GetPlaceholderInfo), arg0, arg1)
}

// SetPlaceholderInfo mocks base method.
func (m *MockIPlaceholderCache) SetPlaceholderInfo(arg0 context.Context, arg1 dto.PlaceholderDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetPlaceholderInfo", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetPlaceholderInfo indicates an expected call of SetPlaceholderInfo.
func (mr *MockIPlaceholderCacheMockRecorder) SetPlaceholderInfo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPlaceholderInfo", reflect.TypeOf((*MockIPlaceholderCache)(nil).SetPlaceholderInfo), arg0, arg1)
}
