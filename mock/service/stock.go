// Code generated by MockGen. DO NOT EDIT.
// Source: stockbit-challenge/service (interfaces: IStockService)

// Package service_mock is a generated GoMock package.
package service_mock

import (
	reflect "reflect"
	model "stockbit-challenge/model"

	gomock "github.com/golang/mock/gomock"
)

// MockIStockService is a mock of IStockService interface.
type MockIStockService struct {
	ctrl     *gomock.Controller
	recorder *MockIStockServiceMockRecorder
}

// MockIStockServiceMockRecorder is the mock recorder for MockIStockService.
type MockIStockServiceMockRecorder struct {
	mock *MockIStockService
}

// NewMockIStockService creates a new mock instance.
func NewMockIStockService(ctrl *gomock.Controller) *MockIStockService {
	mock := &MockIStockService{ctrl: ctrl}
	mock.recorder = &MockIStockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStockService) EXPECT() *MockIStockServiceMockRecorder {
	return m.recorder
}

// GetStockSummary mocks base method.
func (m *MockIStockService) GetStockSummary(arg0 string) (*model.Stock, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStockSummary", arg0)
	ret0, _ := ret[0].(*model.Stock)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStockSummary indicates an expected call of GetStockSummary.
func (mr *MockIStockServiceMockRecorder) GetStockSummary(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStockSummary", reflect.TypeOf((*MockIStockService)(nil).GetStockSummary), arg0)
}
